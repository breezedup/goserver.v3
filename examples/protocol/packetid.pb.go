// Code generated by protoc-gen-go.
// source: protocol/packetid.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type PacketID int32

const (
	PacketID_PACKET_CS_PING PacketID = 1000
	PacketID_PACKET_SC_PONG PacketID = 1001
)

var PacketID_name = map[int32]string{
	1000: "PACKET_CS_PING",
	1001: "PACKET_SC_PONG",
}
var PacketID_value = map[string]int32{
	"PACKET_CS_PING": 1000,
	"PACKET_SC_PONG": 1001,
}

func (x PacketID) Enum() *PacketID {
	p := new(PacketID)
	*p = x
	return p
}
func (x PacketID) String() string {
	return proto.EnumName(PacketID_name, int32(x))
}
func (x PacketID) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PacketID_value, data, "PacketID")
	if err != nil {
		return err
	}
	*x = PacketID(value)
	return nil
}

func init() {
	proto.RegisterEnum("protocol.PacketID", PacketID_name, PacketID_value)
}
